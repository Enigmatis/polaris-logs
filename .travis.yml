language: node_js
node_js:
  - "10"

before_script:
  - npm run setup
  - npm run build

script:
  - npm run lint

after_success:
  - npm run typedoc
  - npm pack

before_deploy:
  - >
    if ! [ "$BEFORE_DEPLOY_RUN" ]; then
      export BEFORE_DEPLOY_RUN=1;
      if [[ $TRAVIS_TAG != "v"* ]]; then exit 1; fi;
      export VERSION=$(echo $TRAVIS_TAG | cut -c 2-);
      export LD_FLAGS="-X main.Version=${VERSION} -X main.BuildDate=$(date "+%F-%T") -X main.Commit=$(git rev-parse --verify HEAD) -X main.Mode=prod";
      go build -ldflags="$LD_FLAGS" -o build/gotify-linux-amd64;
      CC=x86_64-w64-mingw32-gcc  CXX=x86_64-w64-mingw32-g++  CGO_ENABLED=1 GOOS=windows GOARCH=amd64       go build -ldflags="$LD_FLAGS" -o build/gotify-windows-amd64.exe;
      CC=aarch64-linux-gnu-gcc   CXX=aarch64-linux-gnu-g++   CGO_ENABLED=1 GOOS=linux   GOARCH=arm64       go build -ldflags="$LD_FLAGS" -o build/gotify-linux-arm64;
      CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++ CGO_ENABLED=1 GOOS=linux   GOARCH=arm GOARM=7 go build -ldflags="$LD_FLAGS" -o build/gotify-linux-arm-7;
      make package-zip;
      ls -lath build;
      make build-docker;
    fi

deploy:
  - provider: pages
    skip_cleanup: true
    local_dir: docs/
    github_token: $GITHUB_TOKEN
    on:
        branch: master
  - provider: releases
    api_key: $GITHUB_TOKEN
    file_glob: true
    file: "@enigmatis/polaris-logs-*.tgz"
    skip_cleanup: true
    on:
      branch: master
  - provider: npm
    skip_cleanup: true
    email: "bikov95@gmail.com"
    api_key: $NPM_TOKEN
    on:
        branch: master
  - provider: npm
      skip_cleanup: true
      email: "bikov95@gmail.com"
      api_key: $NPM_TOKEN
      tag: next
      on:
          branch: develop
